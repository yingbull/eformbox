/* 
 * Copyright 2013 ClinRisk Ltd.
 * 
 * This file is part of QRISK2-2014 (http://qrisk.org, original sources at http://svn.clinrisk.co.uk/opensource/qrisk2).
 * 
 * QRISK2-2014 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * QRISK2-2014 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with QRISK2-2014.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Additional terms
 * 
 * The following disclaimer must be held together with any risk score score generated by this code.  If the score is displayed, then this disclaimer must be displayed or otherwise be made easily accessible, e.g. by a prominent link alongside it.
 *   The initial version of this file, to be found at http://svn.clinrisk.co.uk/opensource/qrisk2, faithfully implements QRISK2-2014.
 *   ClinRisk Ltd. have released this code under the GNU Lesser General Public License to enable others to implement the algorithm faithfully.
 *   However, the nature of the GNU Lesser General Public License is such that we cannot prevent, for example, someone accidentally 
 *   altering the coefficients, getting the inputs wrong, or just poor programming.
 *   ClinRisk Ltd. stress, therefore, that it is the responsibility of the end user to check that the source that they receive produces the same results as the original code posted at http://svn.clinrisk.co.uk/opensource/qrisk2.
 *   Inaccurate implementations of risk scores can lead to wrong patients being given the wrong treatment.
 * 
 * End of additional terms
 */
/*function BasicView(){return location.href.toLowerCase().indexOf("#basic")>=0}function gender(e){return e&&$(e).addClass("active").siblings().removeClass("active"),$("#male").hasClass("active")?1:0}function race(e){return e&&$(e).addClass("active").siblings().removeClass("active"),$("#black").hasClass("active")?1:0}function ethnicity(){return $("#ethnicity").val()}function male(){return 1==gender()}function female(){return 0==gender()}function black(){return 1==race()}function nonblack(){return 0==race()}function smoker(e){return"qrisk"==_formula_id?parseInt($("#smoke_cat").val())>1:(e&&$(e).addClass("active").siblings().removeClass("active"),$("#smoker_yes").hasClass("active")?1:0)}function totalchol(){return _useMMOL?1*$("#totalchol_mmol").val():$("#totalchol_mgdl").val()/38.666666}function hdlchol(){return _useMMOL?1*$("#hdlchol_mmol").val():$("#hdlchol_mgdl").val()/38.666666}function height(){return _useCm?1*$("#height_cm_label").val():2.54*$("#height_in_label").val()}function weight(){return _useKg?1*$("#weight_kg_label").val():$("#weight_lbs_label").val()/2.2}function bodymassindex(){return 0==weight()||0==height()?0:weight()/(height()/100*height()/100)}function diabetes(e){return"qrisk"==_formula_id?parseInt($("#dm_cat").val())>0:(e&&$(e).addClass("active").siblings().removeClass("active"),$("#diabetes_yes").hasClass("active")?1:0)}function famhistory(e){return e&&$(e).addClass("active").siblings().removeClass("active"),$("#famhistory_yes").hasClass("active")?1:0}function ckd(e){return e&&$(e).addClass("active").siblings().removeClass("active"),$("#ckd_yes").hasClass("active")?1:0}function afib(e){return e&&$(e).addClass("active").siblings().removeClass("active"),$("#afib_yes").hasClass("active")?1:0}function ra(e){return e&&$(e).addClass("active").siblings().removeClass("active"),$("#ra_yes").hasClass("active")?1:0}function systole(){return 1*$("#sbp").val()}function bptreatment(e){return e&&!$(e).parent().hasClass("disabled")&&$(e).addClass("active").siblings().removeClass("active"),$("#bptreatment_yes").hasClass("active")?1:0}function isNumeric(e){return!isNaN(parseFloat(e))&&isFinite(e)}function adjustSliderAllowZeroOrEmpty(e,t,a,i,l){{var s=$("#"+e).val();$("#"+t).attr("min"),$("#"+t).attr("max")}s=$(i).attr("id")==e?$("#"+e).val():$("#"+t).val(),0==s.trim().length||0==parseFloat(s)?(s=0,$("#"+e).val(s)):adjustSlider(e,t,a,i,l),adjust(e,i,l)}function adjustSlider(e,t,a,i,l){if($(i).attr("id")==e){var s=$("#"+e).val(),n=$("#"+t).attr("min"),r=$("#"+t).attr("max");if(!isNumeric(s))return $("#outcome").addClass("opacity10"),$("#"+e).addClass("errorTextbox"),!1;if(parseFloat(s)<parseFloat(n))return $("#outcome").addClass("opacity10"),void setTimeout(function(){parseFloat($("#"+e).val())<parseFloat(n)&&($("#"+a.alert_id).html(a.label+" must be between "+n+" and "+r+" "+a.suffix).show(),$("#"+e).addClass("errorTextbox"))},errorDelay);if(parseFloat(s)>parseFloat(r))return $("#outcome").addClass("opacity10"),void setTimeout(function(){parseFloat($("#"+e).val())>parseFloat(r)&&($("#"+a.alert_id).html(a.label+" must be between "+n+" and "+r+" "+a.suffix).show(),$("#"+e).addClass("errorTextbox"))},errorDelay);$("#"+t).val(s)}else $("#"+e).val($("#"+t).val());$("#"+e).removeClass("errorTextbox"),adjust(e,i,l)}function adjust(e,t,a){adjustValue(e,$(t).val(),a)}function adjustValue(e,t,a){"sbp"==e&&(t>120?($("#bptreatment_toggle").removeClass("disabled"),$("#bptreatment_hint").hide()):$("#bptreatment_toggle").hasClass("disabled")||(bptreatment($("#bptreatment_no")),$("#bptreatment_toggle").addClass("disabled"),$("#bptreatment_hint").show())),a||CALC()}function toggleBenefit(e){var t=$(e);if(t){t.toggleClass("active").siblings().removeClass("active");var a="";if(t.hasClass("active")){var i=t.data("benefit");if(i in _benefit_risks){var l=_benefit_risks[i];"string"==typeof l?a=l:l&&l.length>0&&(a="<ul><li>"+l.join("</li><li>")+"</li></ul>")}else alert('There is no harm information for the intervention "'+i+'"')}if($("#benefit_information").remove(),$("h3.relativeBenefit > span").removeClass("active"),a&&a.length>0){for(var s="<h3>Harm of Intervention</h3><p>"+a+"</p>",n=$("<li/>",{id:"benefit_information"}).html(s),r=t.offset().top;t.next()&&t.next().offset()&&r>=t.next().offset().top;)t=t.next();t.after(n),$("h3.relativeBenefit > span").addClass("active")}CALC()}}function returnBenefitName(e){var t=$("#benefit_estimates").find("li").map(function(e,t){var a=$(t);return a.hasClass("active")?a.data("benefit"):void 0}).get();for(var a in _benefit[e])if(t.contains(a))return a}function benefit(e){if(!(e&&e in _benefit))return alert("I cannot currently calculate benefits for this formula: "+(e?e:"not defined")),0;var t=$("#benefit_estimates").find("li").map(function(e,t){var a=$(t);return a.hasClass("active")?a.data("benefit"):void 0}).get(),a=0;for(var i in _benefit[e])if(t.contains(i)&&!("bp"==i&&systole()<_bp_threshold)&&"smoking"!=i){var l=_benefit[e][i];if("number"!=typeof l){var s=0,n=null;for(var r in l)if("default"==r)s=l[r];else{var o=window[r];if(o&&"function"==typeof o){if(o()){n=l[r];break}}else alert("The benefit for "+i+" of type "+r+" is invalid, needs to be a function name")}l=null!==n?n:s}"number"!=typeof l?(console.error(l),alert("Not a numerical value for benefit "+i+": "+l)):l>a&&(a=l)}return a}function setFormula(e){setFormulaById($(e).data("calc"))}function setFormulaById(e){e&&(_formula_id=e,$("#formula_selector").find("li").removeClass("active").filter(function(){return $(this).data("calc")==_formula_id}).addClass("active"),"ascvd"==e?$("#divRace").show():$("#divRace").hide(),"qrisk"==e?($("#divEthnicity").show(),$("#smoker_dicotomous").hide(),$("#smoker_detailed").show(),$("#dm_dichotomous").hide(),$("#dm_detailed").show(),$(".qrisk_questions").show(),$("#AmountOfRisk").hide(),$("#qrisk_disclaimer").show(),$("#divFamilyHistoryOfEarlyCHD").hide()):($("#divEthnicity").hide(),$("#smoker_dicotomous").show(),$("#smoker_detailed").hide(),$("#dm_dichotomous").show(),$("#dm_detailed").hide(),$(".qrisk_questions").hide(),$("#qrisk_disclaimer").hide(),$("#divFamilyHistoryOfEarlyCHD").show(),$("#AmountOfRisk").show()),"cvd"==e||"chd"==e||"mi"==e||"stroke"==e?$("#BpPriorToDrugs").show():$("#BpPriorToDrugs").hide(),"qrisk"==e||"ascvd"==e?$("#divBPTreatment").show():$("#divBPTreatment").hide(),"qrisk"==e||"ascvd"==e?($("#rangeTime").prop("disabled",!0),$("#time").prop("disabled",!0),$("#rangeTime").val(10),$("#time").val(10),$("#divTime").hide(),$("#time_fixed").show(),adjust("time",$("#rangeTime"),!0)):($("#divTime").show(),$("#time").prop("disabled",!1),$("#rangeTime").prop("disabled",!1),$("#time_fixed").hide()),BasicView()&&($("#divTime").hide(),$("#time_fixed").show()),calculate(e))}function CALC(){calculate(_formula_id)}function BlackFemale(){this.Age=17.1141,this.AgeSquared=0,this.TC=.9396,this.AgexTC=0,this.HDL=-18.9196,this.AgexHDL=4.4748,this.TreatedBP=29.2907,this.AgexTreatedBP=-6.4321,this.UntreatedBP=27.8197,this.AgexUntreatedBP=-6.0873,this.Smoker=.6908,this.AgexSmoker=0,this.Diabetes=.8738,this.BaselineSurvival=.95334,this.OverallMean=86.6081}function BlackMale(){this.Age=2.469,this.AgeSquared=0,this.TC=.302,this.AgexTC=0,this.HDL=-.307,this.AgexHDL=0,this.TreatedBP=1.916,this.AgexTreatedBP=0,this.UntreatedBP=1.809,this.AgexUntreatedBP=0,this.Smoker=.549,this.AgexSmoker=0,this.Diabetes=.645,this.BaselineSurvival=.89536,this.OverallMean=19.5425}function WhiteFemale(){this.Age=-29.799,this.AgeSquared=4.884,this.TC=13.54,this.AgexTC=-3.114,this.HDL=-13.578,this.AgexHDL=3.149,this.TreatedBP=2.019,this.AgexTreatedBP=0,this.UntreatedBP=1.957,this.AgexUntreatedBP=0,this.Smoker=7.574,this.AgexSmoker=-1.665,this.Diabetes=.661,this.BaselineSurvival=.96652,this.OverallMean=-29.1817}function WhiteMale(){this.Age=12.344,this.AgeSquared=0,this.TC=11.853,this.AgexTC=-2.664,this.HDL=-7.99,this.AgexHDL=1.769,this.TreatedBP=1.797,this.AgexTreatedBP=0,this.UntreatedBP=1.764,this.AgexUntreatedBP=0,this.Smoker=7.837,this.AgexSmoker=-1.795,this.Diabetes=.658,this.BaselineSurvival=.91436,this.OverallMean=61.1816}function calculate(e){var t=1*$("#overestimate").val()+100,a=benefit(e);$("#benefit").text(a+"%");var i=1*$("#time").val(),l=gender(),s=1*$("#age").val(),n=systole(),r=smoker(),o=totalchol(),h=hdlchol(),d=diabetes(),c=0,u=120,m=0,g=3,v=1.3,f=0,_=0,b=0,p=0,w=0;$(".errorAlert").hide(),$("#outcome").removeClass("opacity10");var M=!1;if($('input[type="number"]:visible').each(function(){var e=parseFloat($(this).val()),t=parseFloat($(this).attr("min")),a=parseFloat($(this).attr("max")),i=["height_cm","height_cm_label","height_in","height_in_label","weight_kg","weight_kg_label","weight_lbs","weight_lbs_label"],l=$.inArray($(this).attr("id"),i);-1!=l?(e>a||!isNumeric(e))&&($(this).change(),M=!0):(t>e||e>a||!isNumeric(e))&&($(this).change(),M=!0)}),!M){if("cvd"==e)b=t*calc_cvd(i,l,s,n,r,o,h,d,c),p=t*calc_cvd(i,l,s,n,m,o,h,d,c),w=t*calc_cvd(i,l,s,u,m,g,v,f,_);else if("ascvd"==e){var C,x=black(),k=bptreatment();l&&!x&&(C=new WhiteMale),l||x||(C=new WhiteFemale),l&&x&&(C=new BlackMale),!l&&x&&(C=new BlackFemale),b=t*ASCVD10YrRisk(C,s,Math.round(o/.0259),Math.round(h/.0259),n,k,d,r),p=t*ASCVD10YrRisk(C,s,Math.round(o/.0259),Math.round(h/.0259),n,k,d,0),w=t*ASCVD10YrRisk(C,s,Math.round(g/.0259),Math.round(v/.0259),u,0,0,0)}else if("qrisk"==e){var S=s,y=afib(),A=ra(),B=ckd(),F=bptreatment(),T="1"==$("#dm_cat").val()?1:0,I="2"==$("#dm_cat").val()?1:0,L=bodymassindex(),D=$("#ethnicity").val(),H=famhistory(),P=totalchol()/hdlchol(),R=systole(),j=$("#smoke_cat").val(),K=10,O=0;$("#bmi").html(0==L?l?"25 kg/m<sup>2</sup> (imputed)":"25 kg/m<sup>2</sup> (imputed)":L.toFixed(1)+" kg/m<sup>2</sup>"),l?(b=t*QRISK_Male(S,y,A,B,F,T,I,L,D,H,P,R,j,K,O)/100,p=t*QRISK_Male(S,y,A,B,F,T,I,L,D,H,P,R,0,K,O)/100,w=t*QRISK_Male(S,y,A,B,0,0,0,25,D,H,g/v,u,0,K,O)/100):(b=t*QRISK_Female(S,y,A,B,F,T,I,L,D,H,P,R,j,K,O)/100,p=t*QRISK_Female(S,y,A,B,F,T,I,L,D,H,P,R,0,K,O)/100,w=t*QRISK_Female(S,y,A,B,0,0,0,25,D,H,g/v,u,0,K,O)/100)}b=Math.round(10*b)/10,p=Math.round(10*p)/10,w=Math.round(10*w)/10;var q;"smoking"==returnBenefitName(e)?smoker()?(q=Math.max(0,Math.round(10*(b-p))/10),$("#benefit").text("Variable")):(a=0,$("#benefit").text("N/A"),q=0):q=Math.max(0,b*a/100);var E=Math.max(0,b-w),Q=Math.round(w),V=Math.round(E),U=q;if(E>0&&U>0){var N=Math.min(E,U);E-=N,U-=N}if(w>0&&U>0){var N=Math.min(w,U);w-=N,U-=N}var W=0;Q!=Math.round(w)&&(W+=Math.max(0,Q-Math.round(w)),Q-=Math.max(0,Q-Math.round(w))),V!=Math.round(E)&&(W+=Math.max(0,V-Math.round(E)),V-=Math.max(0,V-Math.round(E)));var Y=100-(Q+V+W),z=100-(w+q+E);$("#score_good").text(z.toFixed(1)+"%"),$("#score_bad_sum").text((parseFloat(w.toFixed(1))+parseFloat(E.toFixed(1))).toFixed(1)+"%"),$("#score_bad").text(w.toFixed(1)+"%"),$("#score_bad_add").text(E.toFixed(1)+"%"),$("#score_benefits").text(q.toFixed(1)+"%"),$("#score_nnt").text(q>0?Math.round(100/q):"");for(var Z=$("#faces").empty(),G=0;Q>G;G++)Z.prepend(newFace("bad"));for(var G=0;V>G;G++)Z.prepend(BasicView()?newFace("bad"):newFace("badA"));for(var G=0;W>G;G++)Z.prepend(newFace("green"));for(var G=0;Y>G;G++)Z.prepend(newFace("blue"))}}function calc_cvd(e,t,a,i,l,s,n,r,o){return 1-Math.exp(-Math.exp((Math.log(e)-(18.8144+-1.2146*(1-t)+-1.8443*Math.log(a)+0*Math.log(a)*Math.log(a)+.3668*Math.log(a)*(1-t)+0*Math.log(a)*Math.log(a)*(1-t)+-1.4032*Math.log(i)+-.3899*l+-.539*Math.log(s/n)+-.3036*r+-.1697*r*(1-t)+-.3362*o+0*o*t))/(Math.exp(.6536)*Math.exp(-.2402*(18.8144+-1.2146*(1-t)+-1.8443*Math.log(a)+0*Math.log(a)*Math.log(a)+.3668*Math.log(a)*(1-t)+0*Math.log(a)*Math.log(a)*(1-t)+-1.4032*Math.log(i)+-.3899*l+-.539*Math.log(s/n)+-.3036*r+-.1697*r*(1-t)+-.3362*o+0*o*t)))))}function ASCVD10YrRisk(e,t,a,i,l,s,n,r){var o=0;return o+=Math.log(t)*e.Age,o+=Math.pow(Math.log(t),2)*e.AgeSquared,o+=Math.log(a)*e.TC,o+=Math.log(t)*Math.log(a)*e.AgexTC,o+=Math.log(i)*e.HDL,o+=Math.log(t)*Math.log(i)*e.AgexHDL,1===s?(o+=Math.log(l)*e.TreatedBP,o+=Math.log(t)*Math.log(l)*e.AgexTreatedBP):(o+=Math.log(l)*e.UntreatedBP,o+=Math.log(t)*Math.log(l)*e.AgexUntreatedBP),o+=r*e.Smoker,o+=r*Math.log(t)*e.AgexSmoker,o+=n*e.Diabetes,1-Math.pow(e.BaselineSurvival,Math.pow(Math.E,o-e.OverallMean))}function QRISK_Male(e,t,a,i,l,s,n,r,o,h,d,c,u,m,g){0==r&&(r=25);var v=0;if((25>e||e>84)&&($("#alert_age").html("Age must be between 25 and 84 years for QRISK").show(),v=1),(20>r||r>40)&&($("#alert_BMI").html("BMI must be between 20 and 40 kg/m<sup>2</sup> for QRISK").show(),v=1),(70>c||c>210)&&($("#alert_sbp").html("Systolic BP must be between 70 and 210 mmHg for QRISK").show(),v=1),(1>d||d>12)&&($("#alert_chol").html("Total:HDL cholesterol ratio must be between 1 and 12 for QRISK ("+Math.round(totalchol()/hdlchol()*10)/10+" entered)").show(),v=1),v)return $("#outcome").addClass("opacity10"),0;var f=[0,0,0,0,0,0,0,0,0,0,.977699398994446,0,0,0,0,0],_=[0,0,.35671336474934434,.536955960817619,.5190878419529624,.2182992106490147,-.3474174705898492,-.3674730037922804,-.37496648914261427,-.19269477425316045],b=[0,.2784649664157046,.606783439516896,.7103835060989259,.8626172339181203],p=e;p/=10;var w=Math.pow(p,-1),M=Math.pow(p,2),C=r;C/=10;var x=Math.pow(C,-2),k=Math.pow(C,-2)*Math.log(C);w-=.232008963823318,M-=18.57763671875,x-=.146408438682556,k-=.140651300549507,d-=4.377167701721191,c-=131.03831481933594,g-=.151332527399063;var S=0;S+=_[o],S+=b[u],S+=-17.62255433819456*w,S+=.024187318929827364*M,S+=1.7320282704272665*x,S+=-7.231175406669975*k,S+=.1751387974012235*d,S+=.01016763051791969*c,S+=.029817727149672096*g,S+=.9890997526189402*t,S+=.2541886209118611*a,S+=.794978923043832*i,S+=.6229359479868044*l,S+=1.333035332146393*s,S+=.937295682815194*n,S+=.5923353736582423*h,S+=w*(1==u)*.9243747443632776,S+=w*(2==u)*1.9597527500081284,S+=w*(3==u)*2.9993544847631153,S+=w*(4==u)*5.03707352547681,S+=w*t*8.235420545548273,S+=w*i*-3.974738995197678,S+=w*l*7.873774315916773,S+=w*s*5.423850441446094,S+=w*n*5.062416180653014,S+=w*x*33.543752516739424,S+=w*k*-129.97667382572038,S+=w*h*1.927996387465979,S+=w*c*.05234408921756202,S+=w*g*-.17305880749635402,S+=M*(1==u)*-.0034466074038854394,S+=M*(2==u)*-.005070343149995295,S+=M*(3==u)*.0003216059799916441,S+=M*(4==u)*.0031312537144240087,S+=M*t*.007329193725503997,S+=M*i*-.026155707328653178,S+=M*l*.008555638262261812,S+=M*s*.0020586479482670723,S+=M*n*-.0002328590770854173,S+=M*x*.0811847212080795,S+=M*k*-.25589190688509483,S+=M*h*-.005672907372966341,S+=M*c*-5365842573072993e-20,S+=M*g*-.0010763305052605857;var y=100*(1-Math.pow(f[m],Math.exp(S)));return y}function QRISK_Female(e,t,a,i,l,s,n,r,o,h,d,c,u,m,g){0==r&&(r=25);var v=0;if((25>e||e>84)&&($("#alert_age").html("Age must be between 25 and 84 years for QRISK").show(),v=1),(20>r||r>40)&&($("#alert_BMI").html("BMI must be between 20 and 40 kg/m<sup>2</sup> for QRISK").show(),v=1),(70>c||c>210)&&($("#alert_sbp").html("Systolic BP must be between 70 and 210 mmHg for QRISK").show(),v=1),(1>d||d>12)&&($("#alert_chol").html("Total:HDL cholesterol ratio must be between 1 and 12 for QRISK ("+Math.round(totalchol()/hdlchol()*10)/10+" entered)").show(),v=1),v)return $("#outcome").addClass("opacity10"),0;var f=[0,0,0,0,0,0,0,0,0,0,.98894876241684,0,0,0,0,0],_=[0,0,.26719580479021515,.7147534261793344,.37028944744551157,.20737973626202355,-.17441497227417369,-.3271878654368842,-.22006178761292505,-.20903880324666968],b=[0,.19474808565288548,.6229400520450628,.7405819891143353,.913439268457696],p=e;p/=10;var w=Math.pow(p,.5),M=p,C=r;C/=10;var x=Math.pow(C,-2),k=Math.pow(C,-2)*Math.log(C);w-=2.099778413772583,M-=4.409069538116455,x-=.154046609997749,k-=.144072100520134,d-=3.554229259490967,c-=125.77362823486328,g-=.032508373260498;var S=0;S+=_[o],S+=b[u],S+=3.8734583855051343*w,S+=.13466343044783846*M,S+=x*-.15578724033330626,S+=-3.7727795566691125*k,S+=.15256952089196796*d,S+=.013216530011965356*c,S+=.06436475298640171*g,S+=1.4235421148946676*t,S+=.3021462511553648*a,S+=.8614743039721416*i,S+=.5889355458733704*l,S+=1.6684783657502795*s,S+=1.1350165062510138*n,S+=.5133972775738673*h,S+=w*(1==u)*.6891139747579299,S+=w*(2==u)*.6942632802121627,S+=w*(3==u)*-1.6952388644218186,S+=w*(4==u)*-1.2150150940219255,S+=w*t*-3.585521544819097,S+=w*i*-3.0766647922469192,S+=w*l*-4.029530281188031,S+=w*s*-.33441105674057786,S+=w*n*-3.314480680662053,S+=w*x*-5.593390579723001,S+=w*k*64.3635572837689,S+=w*h*.8605433761217157,S+=w*c*-.05093211545511886,S+=w*g*.15186645407244537,S+=M*(1==u)*-.17653954858826815,S+=M*(2==u)*-.2323836483278573,S+=M*(3==u)*.2734395770551826,S+=M*(4==u)*.14325522874541527,S+=M*t*.4986871390807032,S+=M*i*.43930336156649386,S+=M*l*.690438579030325,S+=M*s*-.17343165660603277,S+=M*n*.48649306558679495,S+=M*x*1.5223341309207974,S+=M*k*-12.741343620796407,S+=M*h*-.275670848141511,S+=M*c*.007379075003974419,S+=M*g*-.04874654626796409;var y=100*(1-Math.pow(f[m],Math.exp(S)));return y}function newFace(e){var t=!1;"devicePixelRatio"in window&&(t=window.devicePixelRatio>1);var a=new Image;return a.src="imgs/"+e+(t?"@2x":"")+".png",a}function toggleCholesterolUnit(){_useMMOL=!_useMMOL;var e=38.666666;if(_useMMOL){$("#input").find(".chol_mmol").show(),$("#input").find(".chol_mgdl").hide();var t=Math.round($("#totalchol_mgdl").val()/e*10)/10;$("#totalchol_mmol").val(t),$("#chol_mmol").val(t),adjustSlider("chol_mmol","totalchol_mmol",_alerts.tchol,null,!0);var a=Math.round($("#hdlchol_mgdl").val()/e*10)/10;$("#hdlchol_mmol").val(a),$("#hdl_mmol").val(a),adjustSlider("hdl_mmol","hdlchol_mmol",_alerts.hdl,null,!0)}else{$("#input").find(".chol_mmol").hide(),$("#input").find(".chol_mgdl").show();var t=2*Math.round($("#totalchol_mmol").val()*e/2);$("#totalchol_mgdl").val(t),$("#chol_mgdl").val(t),adjustSlider("chol_mgdl","totalchol_mgdl",_alerts.tchol,null,!0);var a=2*Math.round($("#hdlchol_mmol").val()*e/2);$("#hdlchol_mgdl").val(a),$("#hdl_mgdl").val(a),adjustSlider("hdl_mgdl","hdlchol_mgdl",_alerts.hdl,null,!0)}}function toggleHeightUnit(){_useCm=!_useCm;var e=2.54;if(_useCm){$("#divHeightCm").show(),$("#divHeightIn").hide();var t=Math.round($("#height_in").val()*e*2)/2;$("#height_cm").val(t),$("#height_cm_label").val(t),adjustSlider("height_cm_label","height_cm",_alerts.height,null,!0)}else{$("#divHeightCm").hide(),$("#divHeightIn").show();var t=Math.round($("#height_cm").val()/e*1)/1;$("#height_in").val(t),$("#height_in_label").val(t),adjustSlider("height_in_label","height_in",_alerts.height,null,!0)}}function toggleWeightUnit(){_useKg=!_useKg;var e=2.2;if(_useKg){$("#divWeightKg").show(),$("#divWeightLbs").hide();var t=Math.round($("#weight_lbs").val()/e*.5)/.5;$("#weight_kg").val(t),$("#weight_kg_label").val(t),adjustSlider("weight_kg_label","weight_kg",_alerts.weight,null,!0)}else{$("#divWeightKg").hide(),$("#divWeightLbs").show();var t=Math.round($("#weight_kg").val()*e*1)/1;$("#weight_lbs").val(t),$("#weight_lbs_label").val(t),adjustSlider("weight_lbs_label","weight_lbs",_alerts.weight,null,!0)}}function showImages(e){var t="";"cvd"==e?t='<div><img src="imgs/heart_attack.jpg" />Heart Attacks</div><div><img src="imgs/heart_failure.jpg" />Heart Failure</div><div><img src="imgs/stroke.jpg" />Strokes</div><div><img src="imgs/intermittent.jpg" />Intermittent claudication</div>':"chd"==e?t='<div><img src="imgs/heart_attack.jpg" />Heart Attacks</div><div><img src="imgs/angina.jpg" />Angina</div>':"mi"==e?t='<div><img src="imgs/heart_attack.jpg" />Heart Attacks</div>':"stroke"==e&&(t='<div><img src="imgs/stroke.jpg" />Strokes</div>'),$("#disease").html(t)}function convertSliders(){$("input[type=range]").each(function(e,t){$(t).keyup(function(e){var t=$(e.target),a=1*t.attr("min2"),i=1*t.attr("max"),l=t.val();void 0!==a&&a>l&&t.val(a),void 0!==i&&l>i&&t.val(i),CALC()}).css("width","30%").next("b").hide()})}function offlineHint(){alert("This calculator can be used while offline.\n\nOn portable devices you may create a home screen icon for quick access, the calculator will act as if it was an App.")}function offlineStatusChanged(e){var t="Available offline";"checking"==e.type||"downloading"==e.type?t="Cache "+e.type+"...":"updateready"==e.type&&(window.applicationCache.swapCache(),window.location.reload()),$("#cache_status").text(t)}var errorDelay=750;$(document).ready(function(){CONVERT_SLIDERS&&convertSliders(),"applicationCache"in window&&(window.applicationCache.addEventListener("checking",offlineStatusChanged,!1),window.applicationCache.addEventListener("noupdate",offlineStatusChanged,!1),window.applicationCache.addEventListener("downloading",offlineStatusChanged,!1),window.applicationCache.addEventListener("cached",offlineStatusChanged,!1),window.applicationCache.addEventListener("updateready",offlineStatusChanged,!1),window.applicationCache.addEventListener("obsolete",offlineStatusChanged,!1),window.applicationCache.addEventListener("error",offlineStatusChanged,!1)),setFormulaById("cvd"),BasicView()&&($("#toggleBasicView").text('Switch to "Enhanced" View'),$("#toggleBasicView").click(function(){window.location.href=window.location.href.split("#")[0]}),$('li[data-benefit="vitaomeg"]').hide(),$('li[data-benefit="bp"]').hide(),$('li[data-benefit="fibrates"]').hide(),$('li[data-benefit="niacin"]').hide(),$('li[data-benefit="ezetimibe"]').hide(),$('li[data-benefit="metformin"]').hide(),$('li[data-benefit="sulfonylureas"]').hide(),$('li[data-benefit="insulins"]').hide(),$('li[data-benefit="glitazones"]').hide(),$('li[data-benefit="glp"]').hide(),$('li[data-benefit="dpp-4"]').hide(),$('li[data-benefit="meglit"]').hide(),$('li[data-benefit="sglt"]').hide(),$("#age").val("").change(),$("#sbp").val("").change(),$("#chol_mmol").val("").change(),$("#chol_mgdl").val("").change(),$("#hdl_mmol").val("").change(),$("#hdl_mgdl").val("").change(),$("#height_cm_label").val("").change(),$("#height_in_label").val("").change(),$("#weight_kg_label").val("").change(),$("#weight_lbs_label").val("").change(),$("#trScoreBad").hide(),$("#trScoreBadAdd").hide(),$("#trScoreBadSum td img").attr("src","imgs/bad.png"))});var _useMMOL=!0,_useCm=!0,_useKg=!0;Array.prototype.contains=function(e){return this.indexOf(e)>=0},"indexOf"in Array.prototype||(Array.prototype.indexOf=function(e){for(var t=0;t<this.length;t++)if(this[t]==e)return t;return-1});/* 
 * Copyright 2013 ClinRisk Ltd.
 * 
 * This file is part of QRISK2-2014 (http://qrisk.org, original sources at http://svn.clinrisk.co.uk/opensource/qrisk2).
 * 
 * QRISK2-2014 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * QRISK2-2014 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with QRISK2-2014.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * Additional terms
 * 
 * The following disclaimer must be held together with any risk score score generated by this code.  If the score is displayed, then this disclaimer must be displayed or otherwise be made easily accessible, e.g. by a prominent link alongside it.
 *   The initial version of this file, to be found at http://svn.clinrisk.co.uk/opensource/qrisk2, faithfully implements QRISK2-2014.
 *   ClinRisk Ltd. have released this code under the GNU Lesser General Public License to enable others to implement the algorithm faithfully.
 *   However, the nature of the GNU Lesser General Public License is such that we cannot prevent, for example, someone accidentally 
 *   altering the coefficients, getting the inputs wrong, or just poor programming.
 *   ClinRisk Ltd. stress, therefore, that it is the responsibility of the end user to check that the source that they receive produces the same results as the original code posted at http://svn.clinrisk.co.uk/opensource/qrisk2.
 *   Inaccurate implementations of risk scores can lead to wrong patients being given the wrong treatment.
 * 
 * End of additional terms
 */
function BasicView() {
    return location.href.toLowerCase().indexOf("#basic") >= 0
}

function gender(e) {
    return e && $(e).addClass("active").siblings().removeClass("active"), $("#male").hasClass("active") ? 1 : 0
}

function race(e) {
    return e && $(e).addClass("active").siblings().removeClass("active"), $("#black").hasClass("active") ? 1 : 0
}

function ethnicity() {
    return $("#ethnicity").val()
}

function male() {
    return 1 == gender()
}

function female() {
    return 0 == gender()
}

function black() {
    return 1 == race()
}

function nonblack() {
    return 0 == race()
}

function smoker(e) {
    return "qrisk" == _formula_id ? parseInt($("#smoke_cat").val()) > 1 : (e && $(e).addClass("active").siblings().removeClass("active"), $("#smoker_yes").hasClass("active") ? 1 : 0)
}

function totalchol() {
    return _useMMOL ? 1 * $("#totalchol_mmol").val() : $("#totalchol_mgdl").val() / 38.666666
}

function hdlchol() {
    return _useMMOL ? 1 * $("#hdlchol_mmol").val() : $("#hdlchol_mgdl").val() / 38.666666
}

function height() {
    return _useCm ? 1 * $("#height_cm_label").val() : 2.54 * $("#height_in_label").val()
}

function weight() {
    return _useKg ? 1 * $("#weight_kg_label").val() : $("#weight_lbs_label").val() / 2.2
}

function bodymassindex() {
    return 0 == weight() || 0 == height() ? 0 : weight() / (height() / 100 * height() / 100)
}

function diabetes(e) {
    return "qrisk" == _formula_id ? parseInt($("#dm_cat").val()) > 0 : (e && $(e).addClass("active").siblings().removeClass("active"), $("#diabetes_yes").hasClass("active") ? 1 : 0)
}

function famhistory(e) {
    return e && $(e).addClass("active").siblings().removeClass("active"), $("#famhistory_yes").hasClass("active") ? 1 : 0
}

function ckd(e) {
    return e && $(e).addClass("active").siblings().removeClass("active"), $("#ckd_yes").hasClass("active") ? 1 : 0
}

function afib(e) {
    return e && $(e).addClass("active").siblings().removeClass("active"), $("#afib_yes").hasClass("active") ? 1 : 0
}

function ra(e) {
    return e && $(e).addClass("active").siblings().removeClass("active"), $("#ra_yes").hasClass("active") ? 1 : 0
}

function systole() {
    return 1 * $("#sbp").val()
}

function bptreatment(e) {
    return e && !$(e).parent().hasClass("disabled") && $(e).addClass("active").siblings().removeClass("active"), $("#bptreatment_yes").hasClass("active") ? 1 : 0
}

function isNumeric(e) {
    return !isNaN(parseFloat(e)) && isFinite(e)
}

function adjustSliderAllowZeroOrEmpty(e, t, a, i, l) {
    {
        var s = $("#" + e).val();
        $("#" + t).attr("min"), $("#" + t).attr("max")
    }
    s = $(i).attr("id") == e ? $("#" + e).val() : $("#" + t).val(), 0 == s.trim().length || 0 == parseFloat(s) ? (s = 0, $("#" + e).val(s)) : adjustSlider(e, t, a, i, l), adjust(e, i, l)
}

function adjustSlider(e, t, a, i, l) {
    if ($(i).attr("id") == e) {
        var s = $("#" + e).val(),
            n = $("#" + t).attr("min"),
            r = $("#" + t).attr("max");
        if (!isNumeric(s)) return $("#outcome").addClass("opacity10"), $("#" + e).addClass("errorTextbox"), !1;
        if (parseFloat(s) < parseFloat(n)) return $("#outcome").addClass("opacity10"), void setTimeout(function() {
            parseFloat($("#" + e).val()) < parseFloat(n) && ($("#" + a.alert_id).html(a.label + " must be between " + n + " and " + r + " " + a.suffix).show(), $("#" + e).addClass("errorTextbox"))
        }, errorDelay);
        if (parseFloat(s) > parseFloat(r)) return $("#outcome").addClass("opacity10"), void setTimeout(function() {
            parseFloat($("#" + e).val()) > parseFloat(r) && ($("#" + a.alert_id).html(a.label + " must be between " + n + " and " + r + " " + a.suffix).show(), $("#" + e).addClass("errorTextbox"))
        }, errorDelay);
        $("#" + t).val(s)
    } else $("#" + e).val($("#" + t).val());
    $("#" + e).removeClass("errorTextbox"), adjust(e, i, l)
}

function adjust(e, t, a) {
    adjustValue(e, $(t).val(), a)
}

function adjustValue(e, t, a) {
    "sbp" == e && (t > 120 ? ($("#bptreatment_toggle").removeClass("disabled"), $("#bptreatment_hint").hide()) : $("#bptreatment_toggle").hasClass("disabled") || (bptreatment($("#bptreatment_no")), $("#bptreatment_toggle").addClass("disabled"), $("#bptreatment_hint").show())), a || CALC()
}

function toggleBenefit(e) {
    var t = $(e);
    if (t) {
        t.toggleClass("active").siblings().removeClass("active");
        var a = "";
        if (t.hasClass("active")) {
            var i = t.data("benefit");
            if (i in _benefit_risks) {
                var l = _benefit_risks[i];
                "string" == typeof l ? a = l : l && l.length > 0 && (a = "<ul><li>" + l.join("</li><li>") + "</li></ul>")
            } else alert('There is no harm information for the intervention "' + i + '"')
        }
        if ($("#benefit_information").remove(), $("h3.relativeBenefit > span").removeClass("active"), a && a.length > 0) {
            for (var s = "<h3>Harm of Intervention</h3><p>" + a + "</p>", n = $("<li/>", {
                    id: "benefit_information"
                }).html(s), r = t.offset().top; t.next() && t.next().offset() && r >= t.next().offset().top;) t = t.next();
            t.after(n), $("h3.relativeBenefit > span").addClass("active")
        }
        CALC()
    }
}

function returnBenefitName(e) {
    var t = $("#benefit_estimates").find("li").map(function(e, t) {
        var a = $(t);
        return a.hasClass("active") ? a.data("benefit") : void 0
    }).get();
    for (var a in _benefit[e])
        if (t.contains(a)) return a
}

function benefit(e) {
    if (!(e && e in _benefit)) return alert("I cannot currently calculate benefits for this formula: " + (e ? e : "not defined")), 0;
    var t = $("#benefit_estimates").find("li").map(function(e, t) {
            var a = $(t);
            return a.hasClass("active") ? a.data("benefit") : void 0
        }).get(),
        a = 0;
    for (var i in _benefit[e])
        if (t.contains(i) && !("bp" == i && systole() < _bp_threshold) && "smoking" != i) {
            var l = _benefit[e][i];
            if ("number" != typeof l) {
                var s = 0,
                    n = null;
                for (var r in l)
                    if ("default" == r) s = l[r];
                    else {
                        var o = window[r];
                        if (o && "function" == typeof o) {
                            if (o()) {
                                n = l[r];
                                break
                            }
                        } else alert("The benefit for " + i + " of type " + r + " is invalid, needs to be a function name")
                    }
                l = null !== n ? n : s
            }
            "number" != typeof l ? (console.error(l), alert("Not a numerical value for benefit " + i + ": " + l)) : l > a && (a = l)
        }
    return a
}

function setFormula(e) {
    setFormulaById($(e).data("calc"))
}

function setFormulaById(e) {
    e && (_formula_id = e, $("#formula_selector").find("li").removeClass("active").filter(function() {
        return $(this).data("calc") == _formula_id
    }).addClass("active"), "ascvd" == e ? $("#divRace").show() : $("#divRace").hide(), "qrisk" == e ? ($("#divEthnicity").show(), $("#smoker_dicotomous").hide(), $("#smoker_detailed").show(), $("#dm_dichotomous").hide(), $("#dm_detailed").show(), $(".qrisk_questions").show(), $("#AmountOfRisk").hide(), $("#qrisk_disclaimer").show(), $("#divFamilyHistoryOfEarlyCHD").hide()) : ($("#divEthnicity").hide(), $("#smoker_dicotomous").show(), $("#smoker_detailed").hide(), $("#dm_dichotomous").show(), $("#dm_detailed").hide(), $(".qrisk_questions").hide(), $("#qrisk_disclaimer").hide(), $("#divFamilyHistoryOfEarlyCHD").show(), $("#AmountOfRisk").show()), "cvd" == e || "chd" == e || "mi" == e || "stroke" == e ? $("#BpPriorToDrugs").show() : $("#BpPriorToDrugs").hide(), "qrisk" == e || "ascvd" == e ? $("#divBPTreatment").show() : $("#divBPTreatment").hide(), "qrisk" == e || "ascvd" == e ? ($("#rangeTime").prop("disabled", !0), $("#time").prop("disabled", !0), $("#rangeTime").val(10), $("#time").val(10), $("#divTime").hide(), $("#time_fixed").show(), adjust("time", $("#rangeTime"), !0)) : ($("#divTime").show(), $("#time").prop("disabled", !1), $("#rangeTime").prop("disabled", !1), $("#time_fixed").hide()), BasicView() && ($("#divTime").hide(), $("#time_fixed").show()), calculate(e))
}

function CALC() {
    calculate(_formula_id);
	//additional code
	baselineRisk();
}

function BlackFemale() {
    this.Age = 17.1141, this.AgeSquared = 0, this.TC = .9396, this.AgexTC = 0, this.HDL = -18.9196, this.AgexHDL = 4.4748, this.TreatedBP = 29.2907, this.AgexTreatedBP = -6.4321, this.UntreatedBP = 27.8197, this.AgexUntreatedBP = -6.0873, this.Smoker = .6908, this.AgexSmoker = 0, this.Diabetes = .8738, this.BaselineSurvival = .95334, this.OverallMean = 86.6081
}

function BlackMale() {
    this.Age = 2.469, this.AgeSquared = 0, this.TC = .302, this.AgexTC = 0, this.HDL = -.307, this.AgexHDL = 0, this.TreatedBP = 1.916, this.AgexTreatedBP = 0, this.UntreatedBP = 1.809, this.AgexUntreatedBP = 0, this.Smoker = .549, this.AgexSmoker = 0, this.Diabetes = .645, this.BaselineSurvival = .89536, this.OverallMean = 19.5425
}

function WhiteFemale() {
    this.Age = -29.799, this.AgeSquared = 4.884, this.TC = 13.54, this.AgexTC = -3.114, this.HDL = -13.578, this.AgexHDL = 3.149, this.TreatedBP = 2.019, this.AgexTreatedBP = 0, this.UntreatedBP = 1.957, this.AgexUntreatedBP = 0, this.Smoker = 7.574, this.AgexSmoker = -1.665, this.Diabetes = .661, this.BaselineSurvival = .96652, this.OverallMean = -29.1817
}

function WhiteMale() {
    this.Age = 12.344, this.AgeSquared = 0, this.TC = 11.853, this.AgexTC = -2.664, this.HDL = -7.99, this.AgexHDL = 1.769, this.TreatedBP = 1.797, this.AgexTreatedBP = 0, this.UntreatedBP = 1.764, this.AgexUntreatedBP = 0, this.Smoker = 7.837, this.AgexSmoker = -1.795, this.Diabetes = .658, this.BaselineSurvival = .91436, this.OverallMean = 61.1816
}

function calculate(e) {
    var t = 1 * $("#overestimate").val() + 100,
        a = benefit(e);
    $("#benefit").text(a + "%");
    var i = 1 * $("#time").val(),
        l = gender(),
        s = 1 * $("#age").val(),
        n = systole(),
        r = smoker(),
        o = totalchol(),
        h = hdlchol(),
        d = diabetes(),
        c = 0,
        u = 120,
        m = 0,
        g = 3,
        v = 1.3,
        f = 0,
        _ = 0,
        b = 0,
        p = 0,
        w = 0;
    $(".errorAlert").hide(), $("#outcome").removeClass("opacity10");
    var M = !1;
    if ($('input[type="number"]:visible').each(function() {
            var e = parseFloat($(this).val()),
                t = parseFloat($(this).attr("min")),
                a = parseFloat($(this).attr("max")),
                i = ["height_cm", "height_cm_label", "height_in", "height_in_label", "weight_kg", "weight_kg_label", "weight_lbs", "weight_lbs_label"],
                l = $.inArray($(this).attr("id"), i); - 1 != l ? (e > a || !isNumeric(e)) && ($(this).change(), M = !0) : (t > e || e > a || !isNumeric(e)) && ($(this).change(), M = !0)
        }), !M) {
        if ("cvd" == e) b = t * calc_cvd(i, l, s, n, r, o, h, d, c), p = t * calc_cvd(i, l, s, n, m, o, h, d, c), w = t * calc_cvd(i, l, s, u, m, g, v, f, _);
        else if ("ascvd" == e) {
            var C, x = black(),
                k = bptreatment();
            l && !x && (C = new WhiteMale), l || x || (C = new WhiteFemale), l && x && (C = new BlackMale), !l && x && (C = new BlackFemale), b = t * ASCVD10YrRisk(C, s, Math.round(o / .0259), Math.round(h / .0259), n, k, d, r), p = t * ASCVD10YrRisk(C, s, Math.round(o / .0259), Math.round(h / .0259), n, k, d, 0), w = t * ASCVD10YrRisk(C, s, Math.round(g / .0259), Math.round(v / .0259), u, 0, 0, 0)
        } else if ("qrisk" == e) {
            var S = s,
                y = afib(),
                A = ra(),
                B = ckd(),
                F = bptreatment(),
                T = "1" == $("#dm_cat").val() ? 1 : 0,
                I = "2" == $("#dm_cat").val() ? 1 : 0,
                L = bodymassindex(),
                D = $("#ethnicity").val(),
                H = famhistory(),
                P = totalchol() / hdlchol(),
                R = systole(),
                j = $("#smoke_cat").val(),
                K = 10,
                O = 0;
            $("#bmi").html(0 == L ? l ? "25 kg/m<sup>2</sup> (imputed)" : "25 kg/m<sup>2</sup> (imputed)" : L.toFixed(1) + " kg/m<sup>2</sup>"), l ? (b = t * QRISK_Male(S, y, A, B, F, T, I, L, D, H, P, R, j, K, O) / 100, p = t * QRISK_Male(S, y, A, B, F, T, I, L, D, H, P, R, 0, K, O) / 100, w = t * QRISK_Male(S, y, A, B, 0, 0, 0, 25, D, H, g / v, u, 0, K, O) / 100) : (b = t * QRISK_Female(S, y, A, B, F, T, I, L, D, H, P, R, j, K, O) / 100, p = t * QRISK_Female(S, y, A, B, F, T, I, L, D, H, P, R, 0, K, O) / 100, w = t * QRISK_Female(S, y, A, B, 0, 0, 0, 25, D, H, g / v, u, 0, K, O) / 100)
        }
        b = Math.round(10 * b) / 10, p = Math.round(10 * p) / 10, w = Math.round(10 * w) / 10;
        var q;
        "smoking" == returnBenefitName(e) ? smoker() ? (q = Math.max(0, Math.round(10 * (b - p)) / 10), $("#benefit").text("Variable")) : (a = 0, $("#benefit").text("N/A"), q = 0) : q = Math.max(0, b * a / 100);
        var E = Math.max(0, b - w),
            Q = Math.round(w),
            V = Math.round(E),
            U = q;
        if (E > 0 && U > 0) {
            var N = Math.min(E, U);
            E -= N, U -= N
        }
        if (w > 0 && U > 0) {
            var N = Math.min(w, U);
            w -= N, U -= N
        }
        var W = 0;
        Q != Math.round(w) && (W += Math.max(0, Q - Math.round(w)), Q -= Math.max(0, Q - Math.round(w))), V != Math.round(E) && (W += Math.max(0, V - Math.round(E)), V -= Math.max(0, V - Math.round(E)));
        var Y = 100 - (Q + V + W),
            z = 100 - (w + q + E);
		//Additional code to access the risk and benefit numbers	
		$("#RiskH").val(z);
		$("#BenefitH").val(q);
		$("#currentRisk").val(w+E);
        $("#score_good").text(z.toFixed(1) + "%"), $("#score_bad_sum").text((parseFloat(w.toFixed(1)) + parseFloat(E.toFixed(1))).toFixed(1) + "%"), $("#score_bad").text(w.toFixed(1) + "%"), $("#score_bad_add").text(E.toFixed(1) + "%"), $("#score_benefits").text(q.toFixed(1) + "%"), $("#score_nnt").text(q > 0 ? Math.round(100 / q) : "");
		for (var Z = $("#faces").empty(), G = 0; Q > G; G++) Z.prepend(newFace("bad"));
        for (var G = 0; V > G; G++) Z.prepend(BasicView() ? newFace("bad") : newFace("badA"));
        for (var G = 0; W > G; G++) Z.prepend(newFace("green"));
        for (var G = 0; Y > G; G++) Z.prepend(newFace("blue"))
    }
}

function calc_cvd(e, t, a, i, l, s, n, r, o) {
    return 1 - Math.exp(-Math.exp((Math.log(e) - (18.8144 + -1.2146 * (1 - t) + -1.8443 * Math.log(a) + 0 * Math.log(a) * Math.log(a) + .3668 * Math.log(a) * (1 - t) + 0 * Math.log(a) * Math.log(a) * (1 - t) + -1.4032 * Math.log(i) + -.3899 * l + -.539 * Math.log(s / n) + -.3036 * r + -.1697 * r * (1 - t) + -.3362 * o + 0 * o * t)) / (Math.exp(.6536) * Math.exp(-.2402 * (18.8144 + -1.2146 * (1 - t) + -1.8443 * Math.log(a) + 0 * Math.log(a) * Math.log(a) + .3668 * Math.log(a) * (1 - t) + 0 * Math.log(a) * Math.log(a) * (1 - t) + -1.4032 * Math.log(i) + -.3899 * l + -.539 * Math.log(s / n) + -.3036 * r + -.1697 * r * (1 - t) + -.3362 * o + 0 * o * t)))))
}

function ASCVD10YrRisk(e, t, a, i, l, s, n, r) {
    var o = 0;
    return o += Math.log(t) * e.Age, o += Math.pow(Math.log(t), 2) * e.AgeSquared, o += Math.log(a) * e.TC, o += Math.log(t) * Math.log(a) * e.AgexTC, o += Math.log(i) * e.HDL, o += Math.log(t) * Math.log(i) * e.AgexHDL, 1 === s ? (o += Math.log(l) * e.TreatedBP, o += Math.log(t) * Math.log(l) * e.AgexTreatedBP) : (o += Math.log(l) * e.UntreatedBP, o += Math.log(t) * Math.log(l) * e.AgexUntreatedBP), o += r * e.Smoker, o += r * Math.log(t) * e.AgexSmoker, o += n * e.Diabetes, 1 - Math.pow(e.BaselineSurvival, Math.pow(Math.E, o - e.OverallMean))
}

function QRISK_Male(e, t, a, i, l, s, n, r, o, h, d, c, u, m, g) {
    0 == r && (r = 25);
    var v = 0;
    if ((25 > e || e > 84) && ($("#alert_age").html("Age must be between 25 and 84 years for QRISK").show(), v = 1), (20 > r || r > 40) && ($("#alert_BMI").html("BMI must be between 20 and 40 kg/m<sup>2</sup> for QRISK").show(), v = 1), (70 > c || c > 210) && ($("#alert_sbp").html("Systolic BP must be between 70 and 210 mmHg for QRISK").show(), v = 1), (1 > d || d > 12) && ($("#alert_chol").html("Total:HDL cholesterol ratio must be between 1 and 12 for QRISK (" + Math.round(totalchol() / hdlchol() * 10) / 10 + " entered)").show(), v = 1), v) return $("#outcome").addClass("opacity10"), 0;
    var f = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, .977699398994446, 0, 0, 0, 0, 0],
        _ = [0, 0, .35671336474934434, .536955960817619, .5190878419529624, .2182992106490147, -.3474174705898492, -.3674730037922804, -.37496648914261427, -.19269477425316045],
        b = [0, .2784649664157046, .606783439516896, .7103835060989259, .8626172339181203],
        p = e;
    p /= 10;
    var w = Math.pow(p, -1),
        M = Math.pow(p, 2),
        C = r;
    C /= 10;
    var x = Math.pow(C, -2),
        k = Math.pow(C, -2) * Math.log(C);
    w -= .232008963823318, M -= 18.57763671875, x -= .146408438682556, k -= .140651300549507, d -= 4.377167701721191, c -= 131.03831481933594, g -= .151332527399063;
    var S = 0;
    S += _[o], S += b[u], S += -17.62255433819456 * w, S += .024187318929827364 * M, S += 1.7320282704272665 * x, S += -7.231175406669975 * k, S += .1751387974012235 * d, S += .01016763051791969 * c, S += .029817727149672096 * g, S += .9890997526189402 * t, S += .2541886209118611 * a, S += .794978923043832 * i, S += .6229359479868044 * l, S += 1.333035332146393 * s, S += .937295682815194 * n, S += .5923353736582423 * h, S += w * (1 == u) * .9243747443632776, S += w * (2 == u) * 1.9597527500081284, S += w * (3 == u) * 2.9993544847631153, S += w * (4 == u) * 5.03707352547681, S += w * t * 8.235420545548273, S += w * i * -3.974738995197678, S += w * l * 7.873774315916773, S += w * s * 5.423850441446094, S += w * n * 5.062416180653014, S += w * x * 33.543752516739424, S += w * k * -129.97667382572038, S += w * h * 1.927996387465979, S += w * c * .05234408921756202, S += w * g * -.17305880749635402, S += M * (1 == u) * -.0034466074038854394, S += M * (2 == u) * -.005070343149995295, S += M * (3 == u) * .0003216059799916441, S += M * (4 == u) * .0031312537144240087, S += M * t * .007329193725503997, S += M * i * -.026155707328653178, S += M * l * .008555638262261812, S += M * s * .0020586479482670723, S += M * n * -.0002328590770854173, S += M * x * .0811847212080795, S += M * k * -.25589190688509483, S += M * h * -.005672907372966341, S += M * c * -5365842573072993e-20, S += M * g * -.0010763305052605857;
    var y = 100 * (1 - Math.pow(f[m], Math.exp(S)));
    return y
}

function QRISK_Female(e, t, a, i, l, s, n, r, o, h, d, c, u, m, g) {
    0 == r && (r = 25);
    var v = 0;
    if ((25 > e || e > 84) && ($("#alert_age").html("Age must be between 25 and 84 years for QRISK").show(), v = 1), (20 > r || r > 40) && ($("#alert_BMI").html("BMI must be between 20 and 40 kg/m<sup>2</sup> for QRISK").show(), v = 1), (70 > c || c > 210) && ($("#alert_sbp").html("Systolic BP must be between 70 and 210 mmHg for QRISK").show(), v = 1), (1 > d || d > 12) && ($("#alert_chol").html("Total:HDL cholesterol ratio must be between 1 and 12 for QRISK (" + Math.round(totalchol() / hdlchol() * 10) / 10 + " entered)").show(), v = 1), v) return $("#outcome").addClass("opacity10"), 0;
    var f = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, .98894876241684, 0, 0, 0, 0, 0],
        _ = [0, 0, .26719580479021515, .7147534261793344, .37028944744551157, .20737973626202355, -.17441497227417369, -.3271878654368842, -.22006178761292505, -.20903880324666968],
        b = [0, .19474808565288548, .6229400520450628, .7405819891143353, .913439268457696],
        p = e;
    p /= 10;
    var w = Math.pow(p, .5),
        M = p,
        C = r;
    C /= 10;
    var x = Math.pow(C, -2),
        k = Math.pow(C, -2) * Math.log(C);
    w -= 2.099778413772583, M -= 4.409069538116455, x -= .154046609997749, k -= .144072100520134, d -= 3.554229259490967, c -= 125.77362823486328, g -= .032508373260498;
    var S = 0;
    S += _[o], S += b[u], S += 3.8734583855051343 * w, S += .13466343044783846 * M, S += x * -.15578724033330626, S += -3.7727795566691125 * k, S += .15256952089196796 * d, S += .013216530011965356 * c, S += .06436475298640171 * g, S += 1.4235421148946676 * t, S += .3021462511553648 * a, S += .8614743039721416 * i, S += .5889355458733704 * l, S += 1.6684783657502795 * s, S += 1.1350165062510138 * n, S += .5133972775738673 * h, S += w * (1 == u) * .6891139747579299, S += w * (2 == u) * .6942632802121627, S += w * (3 == u) * -1.6952388644218186, S += w * (4 == u) * -1.2150150940219255, S += w * t * -3.585521544819097, S += w * i * -3.0766647922469192, S += w * l * -4.029530281188031, S += w * s * -.33441105674057786, S += w * n * -3.314480680662053, S += w * x * -5.593390579723001, S += w * k * 64.3635572837689, S += w * h * .8605433761217157, S += w * c * -.05093211545511886, S += w * g * .15186645407244537, S += M * (1 == u) * -.17653954858826815, S += M * (2 == u) * -.2323836483278573, S += M * (3 == u) * .2734395770551826, S += M * (4 == u) * .14325522874541527, S += M * t * .4986871390807032, S += M * i * .43930336156649386, S += M * l * .690438579030325, S += M * s * -.17343165660603277, S += M * n * .48649306558679495, S += M * x * 1.5223341309207974, S += M * k * -12.741343620796407, S += M * h * -.275670848141511, S += M * c * .007379075003974419, S += M * g * -.04874654626796409;
    var y = 100 * (1 - Math.pow(f[m], Math.exp(S)));
    return y
}

function newFace(e) {
    var t = !1;
    "devicePixelRatio" in window && (t = window.devicePixelRatio > 1);
    var a = new Image;
	return a.src = "displayImage.do?imagefile=" + e + (t ? "@2x" : "") + ".png", a
}

function toggleCholesterolUnit() {
    _useMMOL = !_useMMOL;
    var e = 38.666666;
    if (_useMMOL) {
        $("#input").find(".chol_mmol").show(), $("#input").find(".chol_mgdl").hide();
        var t = Math.round($("#totalchol_mgdl").val() / e * 10) / 10;
        $("#totalchol_mmol").val(t), $("#chol_mmol").val(t), adjustSlider("chol_mmol", "totalchol_mmol", _alerts.tchol, null, !0);
        var a = Math.round($("#hdlchol_mgdl").val() / e * 10) / 10;
        $("#hdlchol_mmol").val(a), $("#hdl_mmol").val(a), adjustSlider("hdl_mmol", "hdlchol_mmol", _alerts.hdl, null, !0)
    } else {
        $("#input").find(".chol_mmol").hide(), $("#input").find(".chol_mgdl").show();
        var t = 2 * Math.round($("#totalchol_mmol").val() * e / 2);
        $("#totalchol_mgdl").val(t), $("#chol_mgdl").val(t), adjustSlider("chol_mgdl", "totalchol_mgdl", _alerts.tchol, null, !0);
        var a = 2 * Math.round($("#hdlchol_mmol").val() * e / 2);
        $("#hdlchol_mgdl").val(a), $("#hdl_mgdl").val(a), adjustSlider("hdl_mgdl", "hdlchol_mgdl", _alerts.hdl, null, !0)
    }
}

function toggleHeightUnit() {
    _useCm = !_useCm;
    var e = 2.54;
    if (_useCm) {
        $("#divHeightCm").show(), $("#divHeightIn").hide();
        var t = Math.round($("#height_in").val() * e * 2) / 2;
        $("#height_cm").val(t), $("#height_cm_label").val(t), adjustSlider("height_cm_label", "height_cm", _alerts.height, null, !0)
    } else {
        $("#divHeightCm").hide(), $("#divHeightIn").show();
        var t = Math.round($("#height_cm").val() / e * 1) / 1;
        $("#height_in").val(t), $("#height_in_label").val(t), adjustSlider("height_in_label", "height_in", _alerts.height, null, !0)
    }
}

function toggleWeightUnit() {
    _useKg = !_useKg;
    var e = 2.2;
    if (_useKg) {
        $("#divWeightKg").show(), $("#divWeightLbs").hide();
        var t = Math.round($("#weight_lbs").val() / e * .5) / .5;
        $("#weight_kg").val(t), $("#weight_kg_label").val(t), adjustSlider("weight_kg_label", "weight_kg", _alerts.weight, null, !0)
    } else {
        $("#divWeightKg").hide(), $("#divWeightLbs").show();
        var t = Math.round($("#weight_kg").val() * e * 1) / 1;
        $("#weight_lbs").val(t), $("#weight_lbs_label").val(t), adjustSlider("weight_lbs_label", "weight_lbs", _alerts.weight, null, !0)
    }
}

function showImages(e) {
    var t = "";
    "cvd" == e ? t = '<div><img src="imgs/heart_attack.jpg" />Heart Attacks</div><div><img src="imgs/heart_failure.jpg" />Heart Failure</div><div><img src="imgs/stroke.jpg" />Strokes</div><div><img src="imgs/intermittent.jpg" />Intermittent claudication</div>' : "chd" == e ? t = '<div><img src="imgs/heart_attack.jpg" />Heart Attacks</div><div><img src="imgs/angina.jpg" />Angina</div>' : "mi" == e ? t = '<div><img src="imgs/heart_attack.jpg" />Heart Attacks</div>' : "stroke" == e && (t = '<div><img src="imgs/stroke.jpg" />Strokes</div>'), $("#disease").html(t)
}

function convertSliders() {
    $("input[type=range]").each(function(e, t) {
        $(t).keyup(function(e) {
            var t = $(e.target),
                a = 1 * t.attr("min2"),
                i = 1 * t.attr("max"),
                l = t.val();
            void 0 !== a && a > l && t.val(a), void 0 !== i && l > i && t.val(i), CALC()
        }).css("width", "30%").next("b").hide()
    })
}

function offlineHint() {
    alert("This calculator can be used while offline.\n\nOn portable devices you may create a home screen icon for quick access, the calculator will act as if it was an App.")
}

function offlineStatusChanged(e) {
    var t = "Available offline";
    "checking" == e.type || "downloading" == e.type ? t = "Cache " + e.type + "..." : "updateready" == e.type && (window.applicationCache.swapCache(), window.location.reload()), $("#cache_status").text(t)
}
var errorDelay = 750;
$(document).ready(function() {
    CONVERT_SLIDERS && convertSliders(), "applicationCache" in window && (window.applicationCache.addEventListener("checking", offlineStatusChanged, !1), window.applicationCache.addEventListener("noupdate", offlineStatusChanged, !1), window.applicationCache.addEventListener("downloading", offlineStatusChanged, !1), window.applicationCache.addEventListener("cached", offlineStatusChanged, !1), window.applicationCache.addEventListener("updateready", offlineStatusChanged, !1), window.applicationCache.addEventListener("obsolete", offlineStatusChanged, !1), window.applicationCache.addEventListener("error", offlineStatusChanged, !1)), setFormulaById("ascvd"), BasicView() && ($("#toggleBasicView").text('Switch to "Enhanced" View'), $("#toggleBasicView").click(function() {
        window.location.href = window.location.href.split("#")[0]
    }), $('li[data-benefit="vitaomeg"]').hide(), $('li[data-benefit="bp"]').hide(), $('li[data-benefit="fibrates"]').hide(), $('li[data-benefit="niacin"]').hide(), $('li[data-benefit="ezetimibe"]').hide(), $('li[data-benefit="metformin"]').hide(), $('li[data-benefit="sulfonylureas"]').hide(), $('li[data-benefit="insulins"]').hide(), $('li[data-benefit="glitazones"]').hide(), $('li[data-benefit="glp"]').hide(), $('li[data-benefit="dpp-4"]').hide(), $('li[data-benefit="meglit"]').hide(), $('li[data-benefit="sglt"]').hide(), $("#age").val("").change(), $("#sbp").val("").change(), $("#chol_mmol").val("").change(), $("#chol_mgdl").val("").change(), $("#hdl_mmol").val("").change(), $("#hdl_mgdl").val("").change(), $("#height_cm_label").val("").change(), $("#height_in_label").val("").change(), $("#weight_kg_label").val("").change(), $("#weight_lbs_label").val("").change(), $("#trScoreBad").hide(), $("#trScoreBadAdd").hide(), $("#trScoreBadSum td img").attr("src", "imgs/bad.png"))
});
var _useMMOL = !0,
    _useCm = !0,
    _useKg = !0;
Array.prototype.contains = function(e) {
    return this.indexOf(e) >= 0
}, "indexOf" in Array.prototype || (Array.prototype.indexOf = function(e) {
    for (var t = 0; t < this.length; t++)
        if (this[t] == e) return t;
    return -1
});